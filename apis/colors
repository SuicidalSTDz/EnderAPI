local function assert(bBool, sMessage, nLevel)
  local iLevel = iLevel or -1
  if type(sMessage) ~= "string" then
    error("String expected, got " .. type( sMessage ), 2)
  elseif type(nLevel) ~= "number" then
    error("Number expected, got " .. type( nLevel ), 2)
  end
	
  if not bBool then
    error( sMessage, iLevel + 1 )
  end
  return bBool
end

function colors.isValid( nColor )
  assert( type( nColor ) == "number","Number expected, got " .. type( nColor ), 2)
  
  for _, v in pairs( colors ) do
    if nColor == v then
      return true
    end
  end
  return false
end

colours.isValid = colors.isValid
