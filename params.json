{"name":"EnderAPI","tagline":"An API by the people, for the people","body":"## Developement Team\r\n<a href=\"https://github.com/SuicidalSTDz\">SuicidalSTDz</a> - Lead Developer <br>\r\n<a href=\"https://github.com/apemanzilla\">apemanzilla</a> - Developer <br>\r\n<a href=\"https://github.com/skwerlman\">skwerlman</a> - Developer <br>\r\n<a href=\"https://github.com/EngineerCoding\">EngineerCoding</a> - Developer <br>\r\n\r\n## Accepted Suggestions\r\n* Graph API\r\n\r\n## Documentation\r\n\r\n### Fs API\r\n```\r\nfs.append( sPath, sData )\r\n```\r\n( Insert description here ) <br>\r\n\r\n```\r\nfs.read( sPath )\r\n```\r\n( Insert description here ) <br>\r\n\r\n```\r\nfs.save( sPath, sData )\r\n```\r\n( Insert description here ) <br>\r\n\r\n### HTTP API\r\n```\r\nhttp.download( sURL, sFile )\r\n```\r\n* Downloads the given sURL as sFile <br>\r\n* Returns: nil <br>\r\n\r\n### MessageBox API\r\nWARNING: Probably very buggy <br>\r\n```\r\nmessageBox.create( sText, fYes, fNo )\r\n```\r\n( Insert description here ) <br >\r\n\r\n### Number API\r\n```\r\nnumber.generate( nLength, nMin, nMax )\r\n```\r\n* Generates a number of nLength with values ranging from nMin to nMax <br>\r\n* Returns: number <br>\r\n\r\n```\r\nnumber.isEven( n )\r\n```\r\n* Returns whether or not n is an even number <br>\r\n* Returns: boolean <br>\r\n\r\n```\r\nnumber.isOdd( n )\r\n```\r\n* Returns whether or not n is an odd number <br>\r\n* Returns boolean <br>\r\n\r\n### Pastebin API\r\n```\r\npastebin.get( sCode, sFile )\r\n```\r\n* Downloads sCode from pastebin as sFile <br>\r\n* Returns: boolean success <br>\r\n\r\n```\r\npastebin.put( sFile )\r\n```\r\n* Uploads sFile to pastebin <br>\r\n* Returns: string code, boolean success <br>\r\n\r\n```\r\npastebin.updateFile( sCode, sFile )\r\n```\r\n* Updates sFile using sCode from pastebin, if sFile is not the same as pastebin file <br>\r\n* Returns: boolean success <br>\r\n\r\n### String API\r\n```\r\nstring.generate( nLength, nCharSet )\r\n```\r\n* Generates a string of nLength with ASCII characters ranging from 0 to nCharSet <br>\r\n* Returns: string\r\n\r\n```\r\nstring:replaceChar( nPos, sReplace )\r\n```\r\n( Insert description here ) <br>\r\n\r\n```\r\nstring:safePattern()\r\n```\r\n( Insert description here ) <br>\r\n\r\n```\r\nstring:splitAtWhite()\r\n```\r\n( Insert description here ) <br>\r\n\r\n### Term API\r\n```\r\nterm.getCursorBlink()\r\n```\r\n( Insert description here ) <br>\r\n\r\n```\r\nterm.clear( nx, ny, nTextColour, nBackgroundColour )\r\n```\r\n( Insert description here ) <br>\r\n\r\n```\r\nterm.reset()\r\n```\r\n( Insert description here ) <br>\r\n\r\n```\r\nterm.getPixelData( nx, ny )\r\n```\r\n( Insert description here ) <br>\r\n\r\n```\r\nterm.getTextColor()\r\n```\r\n( Insert description here ) <br>\r\n\r\n```\r\nterm.getTextColour()\r\n```\r\n( Insert description here ) <br>\r\n\r\n```\r\nterm.getBackgroundColor()\r\n```\r\n( Insert description here ) <br>\r\n\r\n```\r\nterm.getBackgroundColour()\r\n```\r\n( Insert description here ) <br>\r\n\r\n### Text API\r\n```\r\ntext.bracket( sText, nx, ny, nTextColour, nBracketColour, nBackgroundColour )\r\n```\r\n( Insert description here ) <br>\r\n\r\n```\r\ntext.center( sText, nx, ny )\r\n```\r\n( Insert description here ) <br>\r\n\r\n```\r\ntext.printColorFormat( sText )\r\n```\r\n( Insert description here ) <br>\r\n\r\n```\r\ntext.printColourFormat( sText )\r\n```\r\n( Insert description here ) <br>","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}